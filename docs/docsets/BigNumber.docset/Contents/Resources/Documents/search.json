{"Typealiases.html#/s:9BigNumber5Limbsa":{"name":"Limbs","abstract":"<p>Undocumented</p>"},"Typealiases.html#/s:9BigNumber4Limba":{"name":"Limb","abstract":"<p>Undocumented</p>"},"Typealiases.html#/s:9BigNumber6Digitsa":{"name":"Digits","abstract":"<p>Undocumented</p>"},"Typealiases.html#/s:9BigNumber5Digita":{"name":"Digit","abstract":"<p>Undocumented</p>"},"Structs/BDouble.html#/s:Sj9MagnitudeQa":{"name":"Magnitude","parent_name":"BDouble"},"Structs/BDouble.html#/s:Sj9magnitude9MagnitudeQzvp":{"name":"magnitude","parent_name":"BDouble"},"Structs/BDouble.html#/s:Sj7exactlyxSgqd___tcSzRd__lufc":{"name":"init(exactly:)","parent_name":"BDouble"},"Structs/BDouble.html#/s:9BigNumber7BDoubleVyAcA4BIntVcfc":{"name":"init(_:)","abstract":"<p>Undocumented</p>","parent_name":"BDouble"},"Structs/BDouble.html#/s:9BigNumber7BDoubleV4sign9numerator11denominatorACSb_Says6UInt64VGAItcfc":{"name":"init(sign:numerator:denominator:)","abstract":"<p>Inits a BDouble with two Limbs as numerator and denominator</p>","parent_name":"BDouble"},"Structs/BDouble.html#/s:9BigNumber7BDoubleV_4overAcA4BIntV_AFtcfc":{"name":"init(_:over:)","abstract":"<p>Undocumented</p>","parent_name":"BDouble"},"Structs/BDouble.html#/s:9BigNumber7BDoubleV_4overACSi_Sitcfc":{"name":"init(_:over:)","abstract":"<p>Undocumented</p>","parent_name":"BDouble"},"Structs/BDouble.html#/s:9BigNumber7BDoubleV_4overACSgSS_SStcfc":{"name":"init(_:over:)","abstract":"<p>Undocumented</p>","parent_name":"BDouble"},"Structs/BDouble.html#/s:9BigNumber7BDoubleVyACSgSScfc":{"name":"init(_:)","abstract":"<p>Undocumented</p>","parent_name":"BDouble"},"Structs/BDouble.html#/s:9BigNumber7BDoubleV_5radixACSgSS_Sitcfc":{"name":"init(_:radix:)","abstract":"<p>Create an instance initialized to a string with the value of mathematical numerical system of the specified radix (base).","parent_name":"BDouble"},"Structs/BDouble.html#/s:9BigNumber7BDoubleVyACSicfc":{"name":"init(_:)","abstract":"<p>Undocumented</p>","parent_name":"BDouble"},"Structs/BDouble.html#/s:9BigNumber7BDoubleVyACSdcfc":{"name":"init(_:)","abstract":"<p>Undocumented</p>","parent_name":"BDouble"},"Structs/BDouble.html#/s:s27ExpressibleByIntegerLiteralP07integerD0x0cD4TypeQz_tcfc":{"name":"init(integerLiteral:)","parent_name":"BDouble"},"Structs/BDouble.html#/s:s25ExpressibleByFloatLiteralP05floatD0x0cD4TypeQz_tcfc":{"name":"init(floatLiteral:)","parent_name":"BDouble"},"Structs/BDouble.html#/s:9BigNumber7BDoubleV11descriptionSSvp":{"name":"description","abstract":"<p>returns the current value in a fraction format</p>","parent_name":"BDouble"},"Structs/BDouble.html#/s:9BigNumber7BDoubleV19fractionDescriptionSSvp":{"name":"fractionDescription","abstract":"<p>returns the current value in a fraction format</p>","parent_name":"BDouble"},"Structs/BDouble.html#/s:9BigNumber7BDoubleV9precisionSivpZ":{"name":"precision","abstract":"<p>the global percision for all newly created values</p>","parent_name":"BDouble"},"Structs/BDouble.html#/s:9BigNumber7BDoubleV9precisionSivp":{"name":"precision","abstract":"<p>the precision for the current value</p>","parent_name":"BDouble"},"Structs/BDouble.html#/s:9BigNumber7BDoubleV18decimalDescriptionSSvp":{"name":"decimalDescription","abstract":"<p>returns the current value in decimal format with the current precision</p>","parent_name":"BDouble"},"Structs/BDouble.html#/s:9BigNumber7BDoubleV16decimalExpansion26precisionAfterDecimalPoint7roundedSSSi_SbtF":{"name":"decimalExpansion(precisionAfterDecimalPoint:rounded:)","abstract":"<p>Returns the current value in decimal format (always with a decimal point).</p>","parent_name":"BDouble"},"Structs/BDouble.html#/s:SH4hash4intoys6HasherVz_tF":{"name":"hash(into:)","parent_name":"BDouble"},"Structs/BDouble.html#/s:9BigNumber7BDoubleV4sizeSivp":{"name":"size","abstract":"<p>Returns the size of the BDouble in bits.</p>","parent_name":"BDouble"},"Structs/BDouble.html#/s:9BigNumber7BDoubleV15sizeDescriptionSSvp":{"name":"sizeDescription","abstract":"<p>Returns a formated human readable string that says how much space","parent_name":"BDouble"},"Structs/BDouble.html#/s:9BigNumber7BDoubleV7rawDataSb4sign_Says6UInt64VG9numeratorAH11denominatortyF":{"name":"rawData()","abstract":"<p>Undocumented</p>","parent_name":"BDouble"},"Structs/BDouble.html#/s:9BigNumber7BDoubleV10isPositiveSbyF":{"name":"isPositive()","parent_name":"BDouble"},"Structs/BDouble.html#/s:9BigNumber7BDoubleV10isNegativeSbyF":{"name":"isNegative()","parent_name":"BDouble"},"Structs/BDouble.html#/s:9BigNumber7BDoubleV6isZeroSbyF":{"name":"isZero()","parent_name":"BDouble"},"Structs/BDouble.html#/s:9BigNumber7BDoubleV8minimizeyyF":{"name":"minimize()","abstract":"<p>Undocumented</p>","parent_name":"BDouble"},"Structs/BDouble.html#/s:9BigNumber7BDoubleV7roundedAA4BIntVyF":{"name":"rounded()","abstract":"<p>If the right side of the decimal is greater than 0.5 then it will round up (ceil),","parent_name":"BDouble"},"Structs/BDouble.html#/s:9BigNumber7BDoubleV7nthrootyACSiF":{"name":"nthroot(_:)","abstract":"<p>The power of 1/root</p>","parent_name":"BDouble"},"Structs/BDouble.html#/s:9BigNumber7BDoubleV10squareRootACyF":{"name":"squareRoot()","abstract":"<p>The square root</p>","parent_name":"BDouble"},"Structs/BDouble.html#/s:s18AdditiveArithmeticP1poiyxx_xtFZ":{"name":"+(_:_:)","parent_name":"BDouble"},"Structs/BDouble.html#/s:9BigNumber7BDoubleV1poiyA2C_SdtFZ":{"name":"+(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"BDouble"},"Structs/BDouble.html#/s:9BigNumber7BDoubleV1poiyACSd_ACtFZ":{"name":"+(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"BDouble"},"Structs/BDouble.html#/s:9BigNumber7BDoubleV1poiyA2C_AA4BIntVtFZ":{"name":"+(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"BDouble"},"Structs/BDouble.html#/s:9BigNumber7BDoubleV1poiyAcA4BIntV_ACtFZ":{"name":"+(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"BDouble"},"Structs/BDouble.html#/s:s18AdditiveArithmeticP2peoiyyxz_xtFZ":{"name":"+=(_:_:)","parent_name":"BDouble"},"Structs/BDouble.html#/s:9BigNumber7BDoubleV2peoiyyACz_SdtFZ":{"name":"+=(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"BDouble"},"Structs/BDouble.html#/s:9BigNumber7BDoubleV6negateyyF":{"name":"negate()","abstract":"<p>makes the current value negative</p>","parent_name":"BDouble"},"Structs/BDouble.html#/s:s13SignedNumericP1sopyxxFZ":{"name":"-(_:)","parent_name":"BDouble"},"Structs/BDouble.html#/s:s18AdditiveArithmeticP1soiyxx_xtFZ":{"name":"-(_:_:)","parent_name":"BDouble"},"Structs/BDouble.html#/s:9BigNumber7BDoubleV1soiyA2C_SdtFZ":{"name":"-(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"BDouble"},"Structs/BDouble.html#/s:9BigNumber7BDoubleV1soiyACSd_ACtFZ":{"name":"-(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"BDouble"},"Structs/BDouble.html#/s:9BigNumber7BDoubleV1soiyA2C_AA4BIntVtFZ":{"name":"-(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"BDouble"},"Structs/BDouble.html#/s:s18AdditiveArithmeticP2seoiyyxz_xtFZ":{"name":"-=(_:_:)","parent_name":"BDouble"},"Structs/BDouble.html#/s:9BigNumber7BDoubleV2seoiyyACz_SdtFZ":{"name":"-=(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"BDouble"},"Structs/BDouble.html#/s:Sj1moiyxx_xtFZ":{"name":"*(_:_:)","parent_name":"BDouble"},"Structs/BDouble.html#/s:9BigNumber7BDoubleV1moiyA2C_SdtFZ":{"name":"*(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"BDouble"},"Structs/BDouble.html#/s:9BigNumber7BDoubleV1moiyACSd_ACtFZ":{"name":"*(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"BDouble"},"Structs/BDouble.html#/s:9BigNumber7BDoubleV1moiyA2C_AA4BIntVtFZ":{"name":"*(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"BDouble"},"Structs/BDouble.html#/s:9BigNumber7BDoubleV1moiyAcA4BIntV_ACtFZ":{"name":"*(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"BDouble"},"Structs/BDouble.html#/s:Sj2meoiyyxz_xtFZ":{"name":"*=(_:_:)","parent_name":"BDouble"},"Structs/BDouble.html#/s:9BigNumber7BDoubleV2meoiyyACz_SdtFZ":{"name":"*=(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"BDouble"},"Structs/BDouble.html#/s:9BigNumber7BDoubleV2mmoiyA2C_SitFZ":{"name":"**(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"BDouble"},"Structs/BDouble.html#/s:9BigNumber7BDoubleV2mmoiyA2C_AA4BIntVtFZ":{"name":"**(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"BDouble"},"Structs/BDouble.html#/s:9BigNumber7BDoubleV2mmoiyA2C_ACtFZ":{"name":"**(_:_:)","parent_name":"BDouble"},"Structs/BDouble.html#/s:9BigNumber7BDoubleV1doiyA2C_ACtFZ":{"name":"/(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"BDouble"},"Structs/BDouble.html#/s:9BigNumber7BDoubleV1doiyA2C_SdtFZ":{"name":"/(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"BDouble"},"Structs/BDouble.html#/s:9BigNumber7BDoubleV1doiyA2C_AA4BIntVtFZ":{"name":"/(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"BDouble"},"Structs/BDouble.html#/s:9BigNumber7BDoubleV1doiyACSd_ACtFZ":{"name":"/(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"BDouble"},"Structs/BDouble.html#/s:9BigNumber7BDoubleV11nearlyEqual__7epsilonSbAC_ACSdtFZ":{"name":"nearlyEqual(_:_:epsilon:)","abstract":"<p>An == comparison with an epsilon (fixed then a calculated <q>ULPs</q>)","parent_name":"BDouble"},"Structs/BDouble.html#/s:SQ2eeoiySbx_xtFZ":{"name":"==(_:_:)","parent_name":"BDouble"},"Structs/BDouble.html#/s:9BigNumber7BDoubleV2eeoiySbAC_SdtFZ":{"name":"==(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"BDouble"},"Structs/BDouble.html#/s:9BigNumber7BDoubleV2eeoiySbSd_ACtFZ":{"name":"==(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"BDouble"},"Structs/BDouble.html#/s:9BigNumber7BDoubleV2neoiySbAC_ACtFZ":{"name":"!=(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"BDouble"},"Structs/BDouble.html#/s:9BigNumber7BDoubleV2neoiySbAC_SdtFZ":{"name":"!=(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"BDouble"},"Structs/BDouble.html#/s:9BigNumber7BDoubleV2neoiySbSd_ACtFZ":{"name":"!=(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"BDouble"},"Structs/BDouble.html#/s:SL1loiySbx_xtFZ":{"name":"<(_:_:)","parent_name":"BDouble"},"Structs/BDouble.html#/s:9BigNumber7BDoubleV1loiySbAC_SdtFZ":{"name":"<(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"BDouble"},"Structs/BDouble.html#/s:9BigNumber7BDoubleV1loiySbSd_ACtFZ":{"name":"<(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"BDouble"},"Structs/BDouble.html#/s:SL1goiySbx_xtFZ":{"name":">(_:_:)","parent_name":"BDouble"},"Structs/BDouble.html#/s:9BigNumber7BDoubleV1goiySbAC_SdtFZ":{"name":">(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"BDouble"},"Structs/BDouble.html#/s:9BigNumber7BDoubleV1goiySbSd_ACtFZ":{"name":">(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"BDouble"},"Structs/BDouble.html#/s:SL2leoiySbx_xtFZ":{"name":"<=(_:_:)","parent_name":"BDouble"},"Structs/BDouble.html#/s:9BigNumber7BDoubleV2leoiySbAC_SdtFZ":{"name":"<=(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"BDouble"},"Structs/BDouble.html#/s:9BigNumber7BDoubleV2leoiySbSd_ACtFZ":{"name":"<=(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"BDouble"},"Structs/BDouble.html#/s:SL2geoiySbx_xtFZ":{"name":">=(_:_:)","parent_name":"BDouble"},"Structs/BDouble.html#/s:9BigNumber7BDoubleV2geoiySbAC_SdtFZ":{"name":">=(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"BDouble"},"Structs/BDouble.html#/s:9BigNumber7BDoubleV2geoiySbSd_ACtFZ":{"name":">=(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"BDouble"},"Structs/BInt.html#/s:Sj9MagnitudeQa":{"name":"Magnitude","parent_name":"BInt"},"Structs/BInt.html#/s:Sj9magnitude9MagnitudeQzvp":{"name":"magnitude","parent_name":"BInt"},"Structs/BInt.html#/s:Sz5WordsQa":{"name":"Words","parent_name":"BInt"},"Structs/BInt.html#/s:Sz5words5WordsQzvp":{"name":"words","parent_name":"BInt"},"Structs/BInt.html#/s:9BigNumber4BIntV4sizeSivp":{"name":"size","abstract":"<p>Returns the size of the BInt in bits.</p>","parent_name":"BInt"},"Structs/BInt.html#/s:9BigNumber4BIntV15sizeDescriptionSSvp":{"name":"sizeDescription","abstract":"<p>Returns a formated human readable string that says how much space (in bytes, kilobytes, megabytes, or gigabytes) the BInt occupies.</p>","parent_name":"BInt"},"Structs/BInt.html#/s:9BigNumber4BIntVyACSicfc":{"name":"init(_:)","abstract":"<p>Create an instance initialized to an integer value.</p>","parent_name":"BInt"},"Structs/BInt.html#/s:9BigNumber4BIntVyACSucfc":{"name":"init(_:)","abstract":"<p>Create an instance initialized to an unsigned integer value.</p>","parent_name":"BInt"},"Structs/BInt.html#/s:9BigNumber4BIntVyACSgSScfc":{"name":"init(_:)","abstract":"<p>Create an instance initialized to a string value.</p>","parent_name":"BInt"},"Structs/BInt.html#/s:9BigNumber4BIntV_5radixACSgSS_Sitcfc":{"name":"init(_:radix:)","abstract":"<p>Create an instance initialized to a string with the value of mathematical numerical","parent_name":"BInt"},"Structs/BInt.html#/s:9BigNumber4BIntV08prefixedB0ACSgSS_tcfc":{"name":"init(prefixedNumber:)","abstract":"<p>Create an instance initialized to a string with the value of mathematical numerical","parent_name":"BInt"},"Structs/BInt.html#/s:s25ExpressibleByFloatLiteralP05floatD0x0cD4TypeQz_tcfc":{"name":"init(floatLiteral:)","parent_name":"BInt"},"Structs/BInt.html#/s:s27ExpressibleByIntegerLiteralP07integerD0x0cD4TypeQz_tcfc":{"name":"init(integerLiteral:)","parent_name":"BInt"},"Structs/BInt.html#/s:Sj7exactlyxSgqd___tcSzRd__lufc":{"name":"init(exactly:)","parent_name":"BInt"},"Structs/BInt.html#/s:9BigNumber4BIntVyACxcSBRzlufc":{"name":"init(_:)","abstract":"<p>Creates an integer from the given floating-point value, rounding toward zero.</p>","parent_name":"BInt"},"Structs/BInt.html#/s:9BigNumber4BIntVyACxcSzRzlufc":{"name":"init(_:)","abstract":"<p>Creates a new instance from the given integer.</p>","parent_name":"BInt"},"Structs/BInt.html#/s:9BigNumber4BIntV8clampingACx_tcSzRzlufc":{"name":"init(clamping:)","abstract":"<p>Creates a new instance with the representable value that’s closest to the given integer.</p>","parent_name":"BInt"},"Structs/BInt.html#/s:9BigNumber4BIntV7exactlyACSgx_tcSBRzlufc":{"name":"init(exactly:)","abstract":"<p>Creates an integer from the given floating-point value, if it can be represented","parent_name":"BInt"},"Structs/BInt.html#/s:9BigNumber4BIntV18truncatingIfNeededACx_tcSzRzlufc":{"name":"init(truncatingIfNeeded:)","abstract":"<p>Creates a new instance from the bit pattern of the given instance by sign-extending or","parent_name":"BInt"},"Structs/BInt.html#/s:s23CustomStringConvertibleP11descriptionSSvp":{"name":"description","parent_name":"BInt"},"Structs/BInt.html#/s:9BigNumber4BIntV8asString5radixSSSi_tF":{"name":"asString(radix:)","abstract":"<p>Returns the BInt&rsquo;s value in the given base (radix) as a string.</p>","parent_name":"BInt"},"Structs/BInt.html#/s:SH4hash4intoys6HasherVz_tF":{"name":"hash(into:)","parent_name":"BInt"},"Structs/BInt.html#/s:Sz8isSignedSbvpZ":{"name":"isSigned","parent_name":"BInt"},"Structs/BInt.html#/s:Sz8bitWidthSivp":{"name":"bitWidth","parent_name":"BInt"},"Structs/BInt.html#/s:9BigNumber4BIntV6signumACyF":{"name":"signum()","abstract":"<p>Returns -1 if this value is negative and 1 if it’s positive; otherwise, 0.</p>","parent_name":"BInt"},"Structs/BInt.html#/s:9BigNumber4BIntV20trailingZeroBitCountSivp":{"name":"trailingZeroBitCount","abstract":"<p>The number of trailing zeros in this value’s binary representation.</p>","parent_name":"BInt"},"Structs/BInt.html#/s:Sz2lloiyxx_qd__tSzRd__lFZ":{"name":"<<(_:_:)","parent_name":"BInt"},"Structs/BInt.html#/s:Sz3lleoiyyxz_qd__tSzRd__lFZ":{"name":"<<=(_:_:)","parent_name":"BInt"},"Structs/BInt.html#/s:Sz2ggoiyxx_qd__tSzRd__lFZ":{"name":">>(_:_:)","parent_name":"BInt"},"Structs/BInt.html#/s:Sz3ggeoiyyxz_qd__tSzRd__lFZ":{"name":">>=(_:_:)","parent_name":"BInt"},"Structs/BInt.html#/s:9BigNumber4BIntV1aoiyA2C_ACtFZ":{"name":"&(_:_:)","abstract":"<p>Returns the result of performing a bitwise AND operation on the two given values.</p>","parent_name":"BInt"},"Structs/BInt.html#/s:9BigNumber4BIntV2aeoiyyACz_ACtFZ":{"name":"&=(_:_:)","abstract":"<p>Stores the result of performing a bitwise AND operation on the two given values in the","parent_name":"BInt"},"Structs/BInt.html#/s:Sz1ooiyxx_xtFZ":{"name":"|(_:_:)","parent_name":"BInt"},"Structs/BInt.html#/s:Sz2oeoiyyxz_xtFZ":{"name":"|=(_:_:)","parent_name":"BInt"},"Structs/BInt.html#/s:Sz1xoiyxx_xtFZ":{"name":"^(_:_:)","parent_name":"BInt"},"Structs/BInt.html#/s:Sz2xeoiyyxz_xtFZ":{"name":"^=(_:_:)","parent_name":"BInt"},"Structs/BInt.html#/s:Sz1topyxxFZ":{"name":"~(_:)","parent_name":"BInt"},"Structs/BInt.html#/s:9BigNumber4BIntV1popyA2CFZ":{"name":"+(_:)","abstract":"<p>Undocumented</p>","parent_name":"BInt"},"Structs/BInt.html#/s:Sz2peoiyyxz_xtFZ":{"name":"+=(_:_:)","parent_name":"BInt"},"Structs/BInt.html#/s:Sz1poiyxx_xtFZ":{"name":"+(_:_:)","parent_name":"BInt"},"Structs/BInt.html#/s:s13SignedNumericP6negateyyF":{"name":"negate()","parent_name":"BInt"},"Structs/BInt.html#/s:s13SignedNumericP1sopyxxFZ":{"name":"-(_:)","parent_name":"BInt"},"Structs/BInt.html#/s:Sz1soiyxx_xtFZ":{"name":"-(_:_:)","parent_name":"BInt"},"Structs/BInt.html#/s:Sz2seoiyyxz_xtFZ":{"name":"-=(_:_:)","parent_name":"BInt"},"Structs/BInt.html#/s:Sz1moiyxx_xtFZ":{"name":"*(_:_:)","parent_name":"BInt"},"Structs/BInt.html#/s:Sz2meoiyyxz_xtFZ":{"name":"*=(_:_:)","parent_name":"BInt"},"Structs/BInt.html#/s:9BigNumber4BIntV20quotientAndRemainder10dividingByAC0D0_AC9remaindertAC_tF":{"name":"quotientAndRemainder(dividingBy:)","abstract":"<p>Returns the quotient and remainder of this value divided by the given value.</p>","parent_name":"BInt"},"Structs/BInt.html#/s:Sz1doiyxx_xtFZ":{"name":"/(_:_:)","parent_name":"BInt"},"Structs/BInt.html#/s:Sz2deoiyyxz_xtFZ":{"name":"/=(_:_:)","parent_name":"BInt"},"Structs/BInt.html#/s:Sz1roiyxx_xtFZ":{"name":"%(_:_:)","parent_name":"BInt"},"Structs/BInt.html#/s:Sz2reoiyyxz_xtFZ":{"name":"%=(_:_:)","parent_name":"BInt"},"Structs/BInt.html#/s:SQ2eeoiySbx_xtFZ":{"name":"==(_:_:)","parent_name":"BInt"},"Structs/BInt.html#/s:SL1loiySbx_xtFZ":{"name":"<(_:_:)","parent_name":"BInt"},"Structs/BInt.html#/s:SL1goiySbx_xtFZ":{"name":">(_:_:)","parent_name":"BInt"},"Structs/BInt.html#/s:SL2leoiySbx_xtFZ":{"name":"<=(_:_:)","parent_name":"BInt"},"Structs/BInt.html#/s:SL2geoiySbx_xtFZ":{"name":">=(_:_:)","parent_name":"BInt"},"Structs/BInt.html":{"name":"BInt","abstract":"<p>BInt is an arbitrary precision integer value type. It stores a number in base 2^64 notation"},"Structs/BDouble.html":{"name":"BDouble","abstract":"<p>Undocumented</p>"},"Functions.html#/s:9BigNumber3absyAA7BDoubleVADF":{"name":"abs(_:)","abstract":"<p>Returns the absolute value of the given number.</p>"},"Functions.html#/s:9BigNumber5flooryAA4BIntVAA7BDoubleVF":{"name":"floor(_:)","abstract":"<p>round to largest BInt value not greater than base</p>"},"Functions.html#/s:9BigNumber4ceilyAA4BIntVAA7BDoubleVF":{"name":"ceil(_:)","abstract":"<p>round to smallest BInt value not less than base</p>"},"Functions.html#/s:9BigNumber3powyAA7BDoubleVAD_SitF":{"name":"pow(_:_:)","abstract":"<p>Returns a BDouble number raised to a given power.</p>"},"Functions.html#/s:9BigNumber3powyAA7BDoubleVAD_AA4BIntVtF":{"name":"pow(_:_:)","abstract":"<p>Returns a BDouble number raised to a given power.</p>"},"Functions.html#/s:9BigNumber3powyAA7BDoubleVAD_ADtF":{"name":"pow(_:_:)","abstract":"<div class=\"aside aside-warning\">"},"Functions.html#/s:9BigNumber3minyAA7BDoubleVAD_ADtF":{"name":"min(_:_:)","abstract":"<p>Returns the BDouble that is the smallest</p>"},"Functions.html#/s:9BigNumber3maxyAA7BDoubleVAD_ADtF":{"name":"max(_:_:)","abstract":"<p>Returns the BDouble that is largest</p>"},"Extensions/Int.html#/s:Si9BigNumberE12floatLiteralSiSd_tcfc":{"name":"init(floatLiteral:)","abstract":"<p>Undocumented</p>","parent_name":"Int"},"Extensions/Double.html#/s:Sd9BigNumberEySdxcAA11NumericTypeRzlufc":{"name":"init(_:)","abstract":"<p>Undocumented</p>","parent_name":"Double"},"Extensions/Double.html":{"name":"Double"},"Extensions/Int.html":{"name":"Int"},"Extensions.html":{"name":"Extensions","abstract":"<p>The following extensions are available globally.</p>"},"Functions.html":{"name":"Functions","abstract":"<p>The following functions are available globally.</p>"},"Structs.html":{"name":"Structures","abstract":"<p>The following structures are available globally.</p>"},"Typealiases.html":{"name":"Type Aliases","abstract":"<p>The following type aliases are available globally.</p>"}}